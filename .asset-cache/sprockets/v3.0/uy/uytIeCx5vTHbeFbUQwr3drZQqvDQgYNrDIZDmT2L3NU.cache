I"(function() {
  var Nav,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Nav = (function(superClass) {
    extend(Nav, superClass);

    function Nav() {
      return Nav.__super__.constructor.apply(this, arguments);
    }

    Nav.prototype.el = 'nav';

    Nav.prototype.hide = function() {
      return this.$el.addClass('up');
    };

    Nav.prototype.show = function() {
      return this.$el.removeClass('up');
    };

    return Nav;

  })(BaseView);

  window.Nav = Nav;

}).call(this);
:ET